AWSTemplateFormatVersion: 2010-09-09
Description: ジム管理システムのVPC

Parameters:
  ProjectName:
    Description: Project Name
    Type: String

  #---------------------------------------------#
  # CIDR BLOCK                                  #
  #---------------------------------------------#
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 192.168.0.0/20

  AZ1PrivateSubnetEcsCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 192.168.0.0/23

  PrivateSubnetDbCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 192.168.2.0/23

  AZ2PrivateSubnetEcsCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 192.168.4.0/23

  AZ1PublicSubnetEcsCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 192.168.6.0/23

  AZ2PublicSubnetEcsCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 192.168.8.0/23

Resources:
  #---------------------------------------------#
  # VPC                                         #
  #---------------------------------------------#
  GymManagementVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-vpc'

  #---------------------------------------------#
  # Subnet                                      #
  #---------------------------------------------#
  EcsPublicSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GymManagementVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref AZ1PublicSubnetEcsCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ecs-public-subnet1

  EcsPublicSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GymManagementVPC
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Ref AZ2PublicSubnetEcsCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ecs-public-subnet2

  EcsPrivateSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GymManagementVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref AZ1PrivateSubnetEcsCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ecs-private-subnet

  EcsPrivateSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GymManagementVPC
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Ref AZ2PrivateSubnetEcsCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ecs-private-subnet

  DbPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GymManagementVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnetDbCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-db-private-subnet

  #---------------------------------------------#
  # Internet Gateway                            #
  #---------------------------------------------#
  GymManagementInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-internet-gateway'

  GymManagementAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref GymManagementVPC
      InternetGatewayId: !Ref GymManagementInternetGateway

  # #---------------------------------------------#
  # # NAT Gateway                                 #
  # #---------------------------------------------#
  # Az1NatGatewayEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: vpc

  # Az1NatGateway:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt Az1NatGatewayEIP.AllocationId
  #     SubnetId: !Ref EcsPublicSubnetAZ1
  #     Tags:
  #       - Key: Name
  #         Value: NATGateway

  # Az2NatGatewayEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: vpc

  # Az2NatGateway:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt NatGatewayEIP.AllocationId
  #     SubnetId: !Ref EcsPublicSubnetAZ2
  #     Tags:
  #       - Key: Name
  #         Value: NATGateway

  #---------------------------------------------#
  # Route Table                                 #
  #---------------------------------------------#
  Az1PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref GymManagementVPC

  Az1PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GymManagementAttachGateway
    Properties:
      RouteTableId: !Ref Az1PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref GymManagementInternetGateway

  Az1PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref EcsPublicSubnetAZ1
      RouteTableId: !Ref Az1PublicRouteTable

  Az2PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref GymManagementVPC

  Az2PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GymManagementAttachGateway
    Properties:
      RouteTableId: !Ref Az2PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref GymManagementInternetGateway

  Az2PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref EcsPublicSubnetAZ2
      RouteTableId: !Ref Az2PublicRouteTable

  EcsPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref GymManagementVPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-ecs-private-route-table'

  DynamoDbVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: EcsPrivateRouteTable
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.dynamodb'
      VpcId: !Ref GymManagementVPC
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref EcsPrivateRouteTable
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-dynamodb-vpc-endpoint'

  EcsPrivateSubnetAZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref EcsPrivateSubnetAZ1
      RouteTableId: !Ref EcsPrivateRouteTable

  EcsPrivateSubnetAZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref EcsPrivateSubnetAZ2
      RouteTableId: !Ref EcsPrivateRouteTable

  #---------------------------------------------#
  # Security Group                              #
  #---------------------------------------------#
  SgDbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${ProjectName}sg-db-security-group'
      GroupName: !Sub '${ProjectName}-sg-db-security-group'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref SgEcsSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-sg-db'
      VpcId: !Ref GymManagementVPC

  SgEcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: AlbSecurityGroup
    Properties:
      GroupDescription: !Sub '${ProjectName}-sg-ecs-security-group'
      GroupName: !Sub '${ProjectName}-sg-ecs-security-group'
      # ALBを構築した際、コメントアウトを外す。
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref AlbSecurityGroup
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          SourceSecurityGroupId: !Ref AlbSecurityGroup
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !Ref AlbSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref PrivateSubnetDbCIDR
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-sg-ecs'
      VpcId: !Ref GymManagementVPC

  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Application Load Balancer
      VpcId: !Ref GymManagementVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-alb-sg'

  EcrVpcEndpointSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTPS for VPC Endpoints
      VpcId: !Ref GymManagementVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  CloudWatchVpcEndpointSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTPS for VPC Endpoints
      VpcId: !Ref GymManagementVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  #---------------------------------------------#
  # VPC Endpoint                                #
  #---------------------------------------------#
  ECRApiEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.api'
      VpcId: !Ref GymManagementVPC
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref EcsPrivateSubnetAZ1
        - !Ref EcsPrivateSubnetAZ2
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EcrVpcEndpointSg

  ECRDockerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.dkr'
      VpcId: !Ref GymManagementVPC
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref EcsPrivateSubnetAZ1
        - !Ref EcsPrivateSubnetAZ2
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EcrVpcEndpointSg

  CloudWatchEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs'
      VpcId: !Ref GymManagementVPC
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref EcsPrivateSubnetAZ1
        - !Ref EcsPrivateSubnetAZ2
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref CloudWatchVpcEndpointSg

  S3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref GymManagementVPC
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref EcsPrivateRouteTable
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-s3-vpc-endpoint'

Outputs:
  GymManagementVPC:
    Value: !Ref GymManagementVPC
    Export:
      Name: GymManagementVPC
  SgEcsSecurityGroup:
    Value: !Ref SgEcsSecurityGroup
    Export:
      Name: SgEcsSecurityGroup
  AlbSecurityGroup:
    Value: !Ref AlbSecurityGroup
    Export:
      Name: AlbSecurityGroup
  EcsPublicSubnetAZ1:
    Value: !Ref EcsPublicSubnetAZ1
    Export:
      Name: EcsPublicSubnetAZ1
  EcsPublicSubnetAZ2:
    Value: !Ref EcsPublicSubnetAZ2
    Export:
      Name: EcsPublicSubnetAZ2
